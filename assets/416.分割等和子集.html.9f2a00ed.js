import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{o as p,c as e,a as n,d as o,b as s,e as c,r as l}from"./app.b9034ddb.js";const i={},u={id:"_416-\u5206\u5272\u7B49\u548C\u5B50\u96C6",tabindex:"-1"},r=n("a",{class:"header-anchor",href:"#_416-\u5206\u5272\u7B49\u548C\u5B50\u96C6","aria-hidden":"true"},"#",-1),k=s(),d={href:"https://leetcode-cn.com/problems/partition-equal-subset-sum/",target:"_blank",rel:"noopener noreferrer"},m=s("416.\u5206\u5272\u7B49\u548C\u5B50\u96C6"),v=c(`<h2 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h2><ul><li>\u80CC\u5305\u7684\u4F53\u79EF\u4E3A sum / 2</li><li>\u80CC\u5305\u8981\u653E\u5165\u7684\u5546\u54C1\uFF08\u96C6\u5408\u91CC\u7684\u5143\u7D20\uFF09\u91CD\u91CF\u4E3A \u5143\u7D20\u7684\u6570\u503C\uFF0C\u4EF7\u503C\u4E5F\u4E3A\u5143\u7D20\u7684\u6570\u503C</li><li>\u80CC\u5305\u5982\u4F55\u6B63\u597D\u88C5\u6EE1\uFF0C\u8BF4\u660E\u627E\u5230\u4E86\u603B\u548C\u4E3A sum / 2 \u7684\u5B50\u96C6\u3002</li><li>\u80CC\u5305\u4E2D\u6BCF\u4E00\u4E2A\u5143\u7D20\u662F\u4E0D\u53EF\u91CD\u590D\u653E\u5165\u3002</li></ul><h2 id="\u9898\u89E3" tabindex="-1"><a class="header-anchor" href="#\u9898\u89E3" aria-hidden="true">#</a> \u9898\u89E3</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>boolean<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">canPartition</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> sum <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5982\u679C\u4E0D\u662F2\u7684\u6574\u6570 \u76F4\u63A5\u8FD4\u56DEfalse</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

  <span class="token comment">// \u80CC\u5305\u5BB9\u91CF\u6700\u5927\u4E3A\u6570\u7EC4\u603B\u548C\u7684\u4E00\u534A</span>
  <span class="token keyword">const</span> target <span class="token operator">=</span> sum <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>target <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u904D\u5386\u6570\u7EC4</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5012\u5E8F\u904D\u5386\u80CC\u5305\u5BB9\u91CF</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> target<span class="token punctuation">;</span> j <span class="token operator">&gt;=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>j <span class="token operator">-</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5982\u679C\u80CC\u5305\u91CC\u653E\u7684\u6700\u5927\u6570\u548C\u6700\u5927\u5BB9\u91CF\u76F8\u540C \u8FD4\u56DEtrue</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">===</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> dp<span class="token punctuation">[</span>target<span class="token punctuation">]</span> <span class="token operator">===</span> target<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function b(_,h){const a=l("ExternalLinkIcon");return p(),e("div",null,[n("h1",u,[r,k,n("a",d,[m,o(a)])]),v])}var y=t(i,[["render",b],["__file","416.\u5206\u5272\u7B49\u548C\u5B50\u96C6.html.vue"]]);export{y as default};
